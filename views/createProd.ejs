<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Purry Boutique</title>
    <link rel="stylesheet" href="/styles.css" />
    <style>
      form {
        max-width: 400px;
        margin: 0 auto;
      }

      label {
        display: block;
        margin-bottom: 10px;
        font-weight: bold;
      }

      input[type="text"],
      input[type="number"],
      textarea,
      input[type="file"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid var(--hover-color);
        border-radius: 4px;
        box-sizing: border-box;
      }

      button[type="submit"] {
        background-color: var(--theme-color);
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
      }

      button[type="submit"]:hover {
        background-color: var(--hover-color);
      }
    </style>
  </head>
  <body>
    <header class="header">
      <div class="headerDiv">
        <div class="logo">
          <a href="#">Purry Boutique</a>
        </div>
      </div>

      <nav id="sidebar" class="sidebar">
        <ul>
          <div>
            <button class="icon cancel-btn">X</button>
          </div>

          <li><a href="/dashboard">Home</a></li>
          <li><a href="/users">Users</a></li>
          <li><a href="/products">Products</a></li>
        </ul>
      </nav>

      <a href="/logout"><button class="logout-button">Logout</button></a>

      <button id="toggleSidebar" class="icon menu-btn">â˜°</button>
    </header>

    <div class="container">
      <main>
        <h2>Create Product</h2>
        <form id="productForm">
          <label for="title">Title:</label><br />
          <input type="text" id="title" name="title" /><br />
          <label for="category">Category:</label>
          <input type="text" id="category" name="category" /><br />
          <label for="description">Description:</label><br />
          <textarea id="description" name="description"></textarea><br />
          <label for="image">Image:</label><br />
          <input type="file" id="image" name="image" accept="image/*" /><br />
          <label for="stock">Stock:</label>
          <input type="number" id="stock" name="stock" /><br />
          <label for="price">Price:</label><br />
          <input type="number" id="price" name="price" /><br /><br />
          <button type="submit">Create Product</button>
        </form>
      </main>
    </div>

    <script>
      const body = document.querySelector("body");
      const header = document.querySelector(".header");
      const sidebar = document.querySelector(".sidebar");
      const menuBtn = document.querySelector(".menu-btn");
      const cancelBtn = document.querySelector(".cancel-btn");

      menuBtn.onclick = () => {
        sidebar.classList.add("active");
        menuBtn.classList.add("hide");
        body.classList.add("disabledScroll");
      };

      cancelBtn.onclick = () => {
        sidebar.classList.remove("active");
        menuBtn.classList.remove("hide");
        body.classList.remove("disabledScroll");
      };

      window.onscroll = () => {
        this.scrollY > 20
          ? header.classList.add("sticky")
          : header.classList.remove("sticky");
      };

      let image = "";

      const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
          const fileReader = new FileReader();
          fileReader.readAsDataURL(file);

          fileReader.onload = () => {
            resolve(fileReader.result);
          };

          fileReader.onerror = (error) => {
            reject(error);
          };
        });
      };

      const resizeImage = (base64Str, maxWidth = 800, maxHeight = 800) => {
        return new Promise((resolve) => {
          const img = new Image();
          img.src = base64Str;
          img.onload = () => {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");

            let width = img.width;
            let height = img.height;

            if (width > height) {
              if (width > maxWidth) {
                height = Math.round((height * maxWidth) / width);
                width = maxWidth;
              }
            } else {
              if (height > maxHeight) {
                width = Math.round((width * maxHeight) / height);
                height = maxHeight;
              }
            }

            canvas.width = width;
            canvas.height = height;
            ctx.drawImage(img, 0, 0, width, height);

            resolve(canvas.toDataURL("image/jpeg"));
          };
        });
      };

      const uploadImage = async (event) => {
        const file = event.target.files[0];
        if (file) {
          const base64 = await convertBase64(file);
          image = await resizeImage(base64);
        }
      };

      document.getElementById("image").addEventListener("change", uploadImage);

      document
        .getElementById("toggleSidebar")
        .addEventListener("click", function () {
          document.getElementById("sidebar").classList.toggle("collapsed");
        });

      document
        .getElementById("productForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const title = document.getElementById("title").value;
          const description = document.getElementById("description").value;
          const price = document.getElementById("price").value;
          const category = document.getElementById("category").value;
          const stock = document.getElementById("stock").value;

          try {
            const response = await fetch(
              "http://localhost:3000/createProduct",
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  image,
                  title,
                  category,
                  stock,
                  description,
                  price,
                }),
              },
            );

            if (response.ok) {
              const data = await response.json();
              alert("Product created successfully!");
              document.getElementById("productForm").reset();
              image = ""; // Reset the image variable
              window.location.href = `/products`;
            } else {
              throw new Error("Failed to create product");
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Failed to create product");
          }
        });
    </script>
  </body>
</html>
